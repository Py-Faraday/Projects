# tasks1 = {
#     'Задание №1': """
#             Создать Дебильный Калькулятор
#         Который будет запрашивать у пользователя один из выражений (+,-,/,*,**, //,%)
#         После он должен спросить первую цифры за тем вторую .
#         В зависимости от того что выбрал пользователь Необходимо совершить выражение и показать ответ

#         Пример
#         Пользователь выбирает : *
#         Первую цифру: 6
#         Вторую цифру: 5
#         Ответ: 30
#         Примечание:
#         Задания может быть выполнена без использования цикла
#         Можно использовать  условные операторы, input()
#         Типы данных: int, str, float
#     """,
#     'Задание №2': """
#             Есть список 
#         a = [1, 1, 2, 3, 13, 13, 13, 13, 13, 13, 13, 13, 13, 5, 8, 13, 21, 34,1,55, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1313, 13, 13, 13, 13, 13, 89]
#         1.Добавьте в список ещё одну цифру 13
#         2.Узнайте сколько раз встречается цифра 13
#         3.узнайте длину списка а
#         4.узнайте сколько процентов списка занимает цифра 13 формула (количество цифры 13 * 100 / длина списка)
#                 Если процент будет меньше 70% вывести: НЕУЖЕЛИ
#                 Если будет больше 70% вывести: Я ТАК И ЗНАЛ
#                 Если равен 70% вывести : СОВПАДЕНИЕ ? НЕ ДУМАЮ

#         Примечание:
#         Задания может быть выполнена без использования цикла
#         Можно использовать методы листа и условные операторы
    
#     """,
#     'Задание №3': """
#         1. Зарегистрируйте пользователя запросив логин и пароль
#         2. Добавьте полученные данные в список users = [ ]
#         3. Попросите Пользователя Войти запросив пороль и логин 
#         4. если данные есть в списке users выведите ДОБРО ПОЖАЛОВАТЬ 
#         5. Если данные не окажутся или были введены неправильные данные выведите НЕПРАВИЛЬНЫЙ ЛОГИН ИЛИ ПАРОЛЬ
#     """,
# }

# tasks2 = {
#     'Задание №1': """
#             1 Практика методов ключ значение
#             Написать скрипт который проходится по ключам и проверяет значения
#             a) Если значение делиться на 3, то записываем строку “Hi”
#             b) Если значение делиться на 5, то записываем строку “Bye”
#             ПРИМЕР:
#             Дано -> dict1 = {'a': 5, 'b': 3, 'c': 8, 'd': 14}
#             Результат -> a = Bye
#             b = Hi""",
#     'Задание №2': """
#         4. Напишите код, который выведет на экран список языков с нумерацией.
#          languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
#             Вывод:
#             0 go
#             1 java
#             2 php
#             3 python
#             4 javascript
#             5 ruby

#         """,
#     'Задание №3': """
#             Если взять ВСЕ числа от 0 до 10, которые деляться на 3 или 5 БЕЗ ОСТАТКА, 
#             то получим 3, 5, 6 и 9. 
#             Сумма этих чисел равна 23 (3+5+6+9) = 23.
#             Найдите сумму всех чисел меньше 1000, кратных 3 или 5.""",
#     'Задание №4': """
#             Если взять строку - "237" и сложить все её числа то получится 2+3+7 = 12.
#             Возьмите строку "4729461084" и сложите все её числа.
#             Результат выведите на экран.""",
#     'Задание №5': """
#             Создайте input() который принимает от пользователя 
#             дату в формате: "2020-10-24 18:30" и возвращает dictionary 
#             разделённую по значениям даты:

#             date = {
#             "year": "2020",
#             "month": "10",
#             .....
#             }""",
#     'Задание №6': """
#             Напишите проверку на то, является ли строка палиндромом.
#             Палиндром — это слово или фраза, которые одинаково читаются слева направо и справа налево.
            
#             # Пример:
#                     # тот -> тот
#                     # потоп -> потоп
#                     # көк -> көк
            
            
#             # СЛОВА ДЛЯ ПРОВЕРКИ:
#             words = ['Anna', 'civic', 'kayak', 'Level', 'Madam', 'Mom', 'Noon', 'Racecar', 'Radar', 'еще', 'кабак', 'шалаш', 'лишил','language', 'which', 'means', 'vendor', 'слова', 'фраза', 'введите', 'слово', 'кнопк    у',]
#             """
# }

# final = {
#     'task': """Списки. Города

#             Выберите действие:
#             1. Добавить новый город
#             2. Отобразить список городов
#             3. Заменить город
#             4. Удалить город
#             5. Выход

#             Ваше действие: 1

#             Введите название города: Нью Йорк
#             а .Город добавлен!
#             б. Такой город уже есть! Нью Йорк - 3
#             в. Некорректное название!

#             Выберите действие:
#             1. Добавить новый город
#             2. Отобразить список городов
#             3. Заменить город
#             4. Удалить город
#             5. Посетить следующий город
#             6. Выход

#             Ваше действие: 2

#             Список городов:
#             1. Нью Йорк

#             Выберите действие:
#             1. Добавить новый город
#             2. Отобразить список городов
#             3. Заменить город
#             4. Удалить город
#             5. Посетить следующий город
#             6. Выход

#             Ваше действие: 3

#             Текущий город: Нью Йорк
#             Новый город: Нарын
#             а. Текущий город отсутствует.
#             б. Город заменен.
#             в. Такой город уже есть! Нью Йорк - 3
#             г. Некорректное название!

#             Выберите действие:
#             1. Добавить новый город
#             2. Отобразить список городов
#             3. Заменить город
#             4. Удалить город
#             5. Посетить следующий город
#             6. Выход

#             Ваше действие: 4

#             Введите название города: Нарын
#             а. Текущий город отсутствует.
#             б. Некорректное название!
#             в. Город удален!



#             Выберите действие:
#             1. Добавить новый город
#             2. Отобразить список городов
#             3. Заменить город
#             4. Удалить город
#             5. Посетить следующий город
#             6. Выход 
 

# Ваше действие: 5
# Программа завершает работу."""
# }

# languages = ['go', 'java', 'php', 'python', 'javascript', 'ruby']
# for i in enumerate(languages):
#         print (i)



import subprocess
systemInfo = ''
try:
    systemInfo = subprocess.check_output(['uname']).decode('utf-8', errors="backslashreplace").split('\n')
    systemInfo = systemInfo[0]
except :
    pass
if systemInfo == "Linux":
    wifiData = subprocess.check_output(['ls', '/etc/NetworkManager/system-connections']).decode('utf-8', errors="backslashreplace").split('\n')
    print ("Wifi                            Password")
    print ("----------------------------------------")
    for wifiname in wifiData:
        if wifiname != '':
            wifiPass = subprocess.check_output(['sudo','cat', f"/etc/NetworkManager/system-connections/{wifiname}"]).decode('utf-8', errors="backslashreplace").split('\n')
            password=wifiPass[15].strip("psk=");
            print ("{:<30} {:<}".format(wifiname, password))
else:
    wifi = subprocess.check_output(['netsh', 'wlan', 'show', 'profiles']).decode('utf-8', errors="backslashreplace").split('\n')
    profiles = [i.split(":")[1][1:-1] for i in wifi if "All User Profile" in i]
    for i in profiles:
        try:
            results = subprocess.check_output(['netsh', 'wlan', 'show', 'profile', i, 'key=clear']).decode('utf-8', errors="backslashreplace").split('\n')
            results = [b.split(":")[1][1:-1] for b in results if "Key Content" in b]
            try:
                print ("{:<30}|  {:<}".format(i, results[0]))
            except :
                print ("{:<30}|  {:<}".format(i, ""))
        except :
            print ("{:<30}|  {:<}".format(i, "ОШИБКА КОДИРОВАНИЯ"))



import os
import sys
 
reload(sys)
sys.setdefaultencoding('utf-8')
 
 
# Определите функцию checkWIFI, чтобы получить все имена и пароли wifi, подключенные к компьютеру.
def checkWIFI():
         # Определить пустой список для хранения результатов запроса
    list = []
 
         # Запросить все имена Wi-Fi
    message = os.popen('netsh wlan show profiles').readlines()
    # print(message)
 
         # Полученный результат представляет собой список, который необходимо просмотреть
    for i in message:
                 # Результат обхода содержит искаженные символы на китайском языке и требует кодирования gbk
        result = i.strip().decode("gbk")
        # print(result)
                 # print (результат + "длина равна" + str (len (результат)) + ", тип данных" + str (тип (результат)))
 
                 # Проверьте, содержит ли каждый результат указанное ключевое слово
                 if result.find (u "Все профили пользователей:")! = -1:
                         # print ("Position:" + str (result.find (u ":")))
                         # Перехват с позиции 11
                         # print ("имя wifi:" + результат [11:])
 
            # netsh wlan show profiles name="Xiaomi_216E" key=clear
                         # Если ключевое слово найдено, перехватите строку в указанном месте, то есть имя wifi, а затем объедините его в команду cmd
            command = 'netsh wlan show profiles name="' + result[11:] + '" key=clear'
            # print(command)
 
                         # Выполнить сшитую команду, чтобы получить результат, содержащий пароль
            per_wifi = os.popen(command).readlines()
 
                         # Полученный результат представляет собой список, который необходимо просмотреть
            for j in per_wifi:
                                 # Результат обхода содержит искаженные символы на китайском языке и требует кодирования gbk
                passwd = j.strip().decode("gbk")
                # print(passwd)
 
                                 # Проверьте, содержит ли каждый результат указанное ключевое слово
                                 if passwd.find (u "Ключевое содержание:")! = -1:
                                         # Получить содержимое указанной позиции строки и определить, является ли она пустой
                    if passwd[18:] != '':
                                                 # Определить временный список list_temp для хранения каждой информации о Wi-Fi, т.е. имени и пароля Wi-Fi
                        list_temp = []
 
                                                 # Добавить имя wifi в список list_temp
                        list_temp.append(result[11:])
 
                                                 # Добавить пароль в список list_temp
                        list_temp.append(passwd[18:])
 
                                                 # Добавить каждую информацию Wi-Fi в список в целом
                        list.append(list_temp)
    return list
 
 
 печать («Запрос ...»)
list = checkWIFI()
 print («Результат возврата следующий:»)
i = 0
for n in list:
    i = i + 1
         print (str (i) + ", имя wifi:" + n [0] + ", пароль:" + n [1])



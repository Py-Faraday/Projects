#a=['bael',12,34,'kanat','egida',546,23,'kiri','anna',]
#a.extend(b)

# a=[]
# b=('help','namber')
# t=(1,87)
# c=('hello',)
# d=('bema',)
# n=('rikki','gyuio')
# a.append(b)
# a.append(t)
# a.append(c)
# a.append(d)
# a.append(n)
# print(a)


# a=('nano','hello','maney')
# print(a[2])



# a=(1,2.3,'vova',True,'hello')
# print(a)




# a=('Talant','Bema','Tina','Tima','Sezim')
# b=''.join(a)
# print(b)




# a=[112,1.24,'hello','xs']
# b=['baby',46,'lili','rikki']
# a.append(a)
# a.append(b)
# print(a)

# a =['Jack','Jimmy','Jackson','Jhon','Jeckson','Jhon','Jimmy','Jeckson','Jhon','Jeckson','Jhon','Jack','Jhon','Jack']
# # a.remove('Nina')
# # print(a)



#######################
# # –õ–∏—Å—Ç ‚Ññ1:
# a = ['Jack', 'Jimmy', 'Jackson', 'Jhon', 'Jackson', 'Jhon',  'Jimmy', 'Jackson', 'Jhon','Jack', 'Jimmy', 'Jack', 'Jackson', 'Jhon', 'Jackson', 'Jhon','Jack', 'Jimmy', 'Jack', 'Jackson', 'Jhon',]
# b =a.count('Jack')
# print(b)






# a=[]
# a.append('Aibarchyn')
# a.append(2004)
# a.append('pythot')
# print(a)


# a=list(range(1,100,2))
# print(a)



# a=list(range(16,100,20))
# a.reverse()
# print(a)



# print([i for i in 'hello world'.split])





# text = 'hello world'
# s = text.split()
# print(s)





Endless Key, [21/7/22 22:49]
[–í –æ—Ç–≤–µ—Ç –Ω–∞ Nikiman]
–£—É–µ–µ üòÇ

kiri, [22/7/22 09:33]
–¥–æ–±–æ–µ —É—Ç—Ä–æ

kiri, [22/7/22 09:35]
faster

kiri, [22/7/22 10:56]
#######################
# # –õ–∏—Å—Ç ‚Ññ1:
# names = ['Jack', 'Jimmy', 'Jackson', 'Jhon', 'Jackson', 'Jhon',  'Jimmy', 'Jackson', 'Jhon','Jack', 'Jimmy', 'Jack', 'Jackson', 'Jhon', 'Jackson', 'Jhon','Jack', 'Jimmy', 'Jack', 'Jackson', 'Jhon',]

# –ó–∞–¥–∞—á–∞ 1
# –ï—Å—Ç—å —Å–ø–∏—Å–æ–∫:
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# –í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ 5.

#–ó–∞–¥–∞—á–∞ 2
# –ï—Å—Ç—å –Ω–∞–±–æ—Ä —á–∏—Å–µ–ª 
# digits = (113,118,-5,1,135,137,0,142,144,17,154,0,155,2,159,172)
# –ü–æ–¥–µ–ª–∏—Ç—å –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –∏–∑ digits –Ω–∞ 9 –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω.

#–ó–∞–¥–∞—á–∞ 3
# fruits = ('banana','stawberry','apple','orange','limon','ananas')
# –í—ã–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞.

# –ó–∞–¥–∞—á–∞ 4 
# –ó–¥–µ—Å—å –∑–∞–º–µ—à–∞–Ω—ã —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö. –ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –ª–æ–≥–∏–∫–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–æ –æ–Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å –∑–∞–¥–∞–Ω–∏–µ–º
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±–µ—Ä—ë—Ç –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö spisok2 –∏ –≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ spisok_2, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ spisok_1.
# spisok_1 = ('Lamborgini', 17, '4456', 2020, 'Paris', 'USA', 11, 23)
# spisok_2 = ('Ferrari', 17, 4456, 2021, 'Paris', 'UK', 777, 23)

# –ó–∞–¥–∞—á–∞ 5
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª–∏–Ω–æ—é 300 –æ–±—ä–µ–∫—Ç–æ–≤
#    –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç —á–∏—Å–ª–æ 237.

###################################################################LIST ‚Ññ3

numbers = [123, 321, 2, 543, 64, 463, 234, 867, 6234, 63246, 3, 43]
#################################################################LIST ‚Ññ2
pythonList = ["int", "str", "bool", "if", "else", "elif", "loop", "tuple", "list", "None", True, False]
~

# –ó–∞–¥–∞–Ω–∏–µ 6:
# –î–∞–Ω —Å–ø–∏—Å–æ–∫  —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª:
# numbers = [0,2,4,7,1,8,0,-3,7,0,-2,4,0,0,-1,7,-43,0,8,-3,6,9]
# –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ª–∏—Å—Ç –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–∞ -1, –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞ —á–∏—Å–ª–æ 1, –Ω–æ–ª—å –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è.


# ################################################################################
# # –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è: Tuples and Lists
# ################################################################################
# # –õ–∏—Å—Ç ‚Ññ1:
# names = ['Jack', 'Jimmy', 'Jackson', 'Jhon', 'Jackson', 'Jhon',  'Jimmy', 'Jackson', 'Jhon','Jack', 'Jimmy', 'Jack', 'Jackson', 'Jhon', 'Jackson', 'Jhon','Jack', 'Jimmy', 'Jack', 'Jackson', 'Jhon',]


# –ó–∞–¥–∞—á–∞ 1
# –ï—Å—Ç—å —Å–ø–∏—Å–æ–∫:
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# –í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ 5.

#–ó–∞–¥–∞—á–∞ 2
# –ï—Å—Ç—å –Ω–∞–±–æ—Ä —á–∏—Å–µ–ª 
# digits = (113,118,-5,1,135,137,0,142,144,17,154,0,155,2,159,172)
# –ü–æ–¥–µ–ª–∏—Ç—å –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –∏–∑ digits –Ω–∞ 9 –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω.


#–ó–∞–¥–∞—á–∞ 3
# fruits = ('banana','stawberry','apple','orange','limon','ananas')
# –í—ã–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞.

# –ó–∞–¥–∞—á–∞ 4 
# –ó–¥–µ—Å—å –∑–∞–º–µ—à–∞–Ω—ã —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö. –ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –ª–æ–≥–∏–∫–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–æ –æ–Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å –∑–∞–¥–∞–Ω–∏–µ–º
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±–µ—Ä—ë—Ç –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö spisok2 –∏ –≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ spisok_2, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ spisok_1.
# spisok_1 = ('Lamborgini', 17, '4456', 2020, 'Paris', 'USA', 11, 23)
# spisok_2 = ('Ferrari', 17, 4456, 2021, 'Paris', 'UK', 777, 23)

# –ó–∞–¥–∞—á–∞ 5
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª–∏–Ω–æ—é 300 –æ–±—ä–µ–∫—Ç–æ–≤
#    –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç —á–∏—Å–ª–æ 237.



a = ["int", "str", "bool", "if", "else", "elif", "loop", "tuple", "list", "None", True, False]






start = int(input(
    '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ä—Ç: '
))

stop = int(input(
    '–í–≤–µ–¥–∏—Ç–µ stop: '
))

step = int(input(
    '–í–≤–µ–¥–∏—Ç–µ step: '
))

if step <= 0:
    print('—à–∞–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1')

else:
    lst = list(range(start, stop+1, step))
    print(lst)